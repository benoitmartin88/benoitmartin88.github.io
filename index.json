[{"content":"I defended my PhD thesis, \u0026ldquo;TTCC: Transactional-Turn Causal Consistency\u0026rdquo;, in Paris on Friday 21st April 2023 at 14:00 (Paris Time). My PhD research was completed within the LIP6 with the Delys INRIA team and under the supervision of Marc Shapiro.\nThesis defense live video\u003e Thesis defense live video Jury members\u003e Jury members Reviewer: Achour Mostefaoui Professor, Université de Nantes Reviewer: Gaël Thomas Professor, Telecom SudParis Examiner: Bernd Amann Professor, Sorbonne Université, LIP6 Examiner: Annette Bieniusa Professor, Université Technique de Kaiserslautern Examiner: Carla Ferreira Associate Professor, Université NOVA de Lisbon Examiner: Peter Van Roy Professor, Université Catholique de Louvain Supervisor: Marc Shapiro Distinguished Research Scholar (Emeritus), Sorbonne Université, LIP6, Inria Advisor: Mesaac Makpangou Researcher, Sorbonne Université, LIP6, Inria Abstract\u003e Abstract Today, stateful serverless functions are chained together through a message-based infrastructure and store their durable state in a separate database. This separation between storage and compute creates serious challenges that may lead to inconsistency and application crashes. A unified consistency model for message passing and shared memory is required to avoid such errors. The model should ensure that multiple pieces of data remain mutually consistent, whether data is sent using messages or shared in a distributed memory.\nBased on a well-known message-based model (actors) and a state model (transactional shared memory), we propose a unified communication and persistence model called Transactional Turn Causal consistency (TTCC). TTCC is asynchronous, preserves isolation, and ensures that the message and memory view are mutually causally consistent.\n","date":"21 April 2023","permalink":"/thesis/","section":"","summary":"I defended my PhD thesis, \u0026ldquo;TTCC: Transactional-Turn Causal Consistency\u0026rdquo;, in Paris on Friday 21st April 2023 at 14:00 (Paris Time). My PhD research was completed within the LIP6 with the Delys INRIA team and under the supervision of Marc Shapiro.","title":"PhD Thesis"},{"content":"Experience\u003e Experience Company Role Dates Laboratoire d'Informatique de Paris 6 (LIP6) PhD Student 11/2019 - Present Today, stateful serverless functions are chained together through a message-based infrastructure and store their durable state in a separate database. This separation between storage and compute creates serious challenges that may lead to inconsistency and application crashes. A unified consistency model for message passing and shared memory is required to avoid such errors. The model should ensure that multiple pieces of data remain mutually consistent, whether data is sent using messages or shared in a distributed memory. Based on a well-known message-based model (actors) and a state model (transactional shared memory), we propose a unified communication and persistence model called Transactional Turn Causal Consistency (TTCC). TTCC is asynchronous, preserves isolation, and ensures that the message and memory view are mutually causally consistent. Keywords: Causal Consistency, Serverless, Actor Model, Shared Memory Ecole Supérieur de Génie Informatique (ESGI) Teacher in Parallel Programming 09/2017 - 11/2019 Teacher in parallel programming for 5th year Computer Science students specialized in Software Architecture. During my time teaching this class, I also prepared and supervised exams and group projects. In-class lessons and projects were in C++. Inria - ARAMIS R\u0026amp;D Engineer 05/2018 - 10/2019 Based at the Brain and Spine Institute at the Pitié-Salpêtrière hospital in Paris, I was a member of the ARAMIS Inria team. I participated the development of Deformetrica which was ported from C++ to Python. I contributed by optimizing the performance of the application to help PhD students run experiments on a bigger dataset. Also, I contributed to PyKeops which is used in Deformetrica to offload kernel operations.\nI used the following technologies:\nPyTorch: tensor library with auto-differentiation used within the Deformetrica application Anaconda: library repository for Deformetrica Python/Jupyter/Matplotlib/Nibabel: to prototype plot and read MR Images C++/Cuda: Keops (kernel operations library)\nTredzone R\u0026D Software Engineer 07/2015 - 03/2018 Tredzone offers a high performance, low latency framework in C++ and Java for the capital market industry and other performance-hungry industries. I contributed to the development of the C++ and Java actor model runtime.\nAdditionally, we develop a library in C++11, which leverages our C++ actor framework to compose a high performance application. Our framework is used in production at Euronext to power the core of their Optiq solution.\nThe following technologies are used:\nC++11 : highly abstracted runtime and SDK Solarflare : sub-microsecond feedhandlers Java JNI : predictable latency Java runtime and SDK Realtime Linux : tweaking for stable and ultra-low latency\nIntel Corp HPC Application Engineer 07/2014 - 12/2014 Intern at the Exascale research lab in Paris. The lab was founded by Intel, the University of Versailles Saint Quentin (UVSQ), le Commissariat à l’énergie atomique et aux énergies alternatives (CEA) and Grand Equipement National de Calcul Intensif (GENCI). I was involved in the analysis and code optimization of the Gysela5D gyrokinetic code for Intel\u0026rsquo;s Many Integrated Core Architecture (Intel MIC/Xeon Phi) and Sandy Bridge Xeon Architecture.\nKeywords: Roofline Model, VTunes, Software Development Emulator (SDE), Intel compiler Education\u003e Education School Link Degree Date Sorbonne Université PhD in Distributed Systems 2023 Université du Québec à Chicoutimi (UQAC) Master 2014 Ecole Supérieur de Génie Informatique (ESGI) Masters - Software Architect 2014 Bachelor 2012 Publications\u003e Publications Benoît Martin and Marc Shapiro. 2022. Shared memory for the actor model. In Conférence francophone d’informatique en Parallélisme, Architecture et Système (COMPAS), Amiens, France. pdf Benoît Martin, Laurent Prosperi, and Marc Shapiro. 2020. An environment for composable distributed computing. pdf Baptiste Couvy-Duchesne, Johann Faouzi, Benoît Martin, Elina Thibeau–Sutre, Adam Wild, Manon Ansart, Stanley Durrleman, Didier Dormont, Ninon Burgos, and Olivier Colliot. 2020. Ensemble Learning of Convolutional Neural Network, Support Vector Machine, and Best Linear Unbiased Predictor for Brain Age Prediction: ARAMIS Contribution to the Predictive Analytics Competition 2019 Challenge. Frontiers in Psychiatry 11, (2020). pdf Alexandre Bône, Benoît Martin, Maxime Louis, Olivier Colliot, and Stanley Durrleman. 2019. Hierarchical modeling of Alzheimer’s disease progression from a large longitudinal MRI data set. pdf Alexandre Bône, Maxime Louis, Benoît Martin, and Stanley Durrleman. 2018. Deformetrica 4: An Open-Source Software for Statistical Shape Analysis. In Shape in Medical Imaging (Lecture Notes in Computer Science), Springer International Publishing, Cham, 3–13. pdf Hamid Mcheick, Louis Deladiennee, Mickael Wajnberg, Benoît Martin, and Marc Abi-Khalil. 2014. Universal Connector Framework for Pervasive Computing Using Cloud Technologies. Procedia Computer Science 34, (January 2014), 141–148. pdf ","date":"20 February 2023","permalink":"/resume/","section":"","summary":"Experience\u003e Experience Company Role Dates Laboratoire d'Informatique de Paris 6 (LIP6) PhD Student 11/2019 - Present Today, stateful serverless functions are chained together through a message-based infrastructure and store their durable state in a separate database.","title":"Resume"},{"content":"","date":"21 January 2023","permalink":"/","section":"","summary":"","title":""},{"content":"","date":"21 January 2023","permalink":"/authors/","section":"Authors","summary":"","title":"Authors"},{"content":"","date":"21 January 2023","permalink":"/authors/benoitmartin/","section":"Authors","summary":"","title":"benoitmartin"},{"content":"","date":"21 January 2023","permalink":"/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"","date":"21 January 2023","permalink":"/tags/github-pages/","section":"Tags","summary":"","title":"github pages"},{"content":"","date":"21 January 2023","permalink":"/tags/hugo/","section":"Tags","summary":"","title":"hugo"},{"content":"","date":"21 January 2023","permalink":"/tags/jerkyll/","section":"Tags","summary":"","title":"jerkyll"},{"content":"This is my first post. Yay !!\nI finally took the time to set this website up. I plan on using this space to document my projects as well as ramble about a few random things.\nBefore writing anything else, I\u0026rsquo;ll start by explaining how this site is built. First of all, I have no need for any dynamic content. Everything on this site is static, so I opted for a static website generator. Furthermore, I love using Obsidian to manage and write in markdown. I\u0026rsquo;ll probably write a post about obsidian in a near future. Anyhow, this website is generated from markdown using Hugo and the Blowfish theme ❤️.\nHugo\u003e Hugo # Hugo is a static site generator written in Go. Its lightweight, super fast and easy to use. An alternative to Hugo is Jekyll which is natively supported on Github pages, but I didn\u0026rsquo;t feel like having any kind of Ruby on my laptop.\nTo start things off, I mostly followed the quick start guide from the official Hugo website: https://gohugo.io/getting-started/quick-start. From my project directory, I first initialized an empty Hugo site using the hugo new site site command. This creates a site directory in which the default Hugo file structure is created. This is what file structure looks like using the tree -L 2 command from my project root folder. (I guess I\u0026rsquo;ll also write a post about the different tools that I like to use.)\n. └── site ├── archetypes ├── assets ├── content ├── data ├── layouts ├── resources ├── static └── themes Blowfish\u003e Blowfish # The next step is installing a theme. For this, I headed to https://themes.gohugo.io and I selected Blowfish. I chose to install this theme using the git submodule method which I find simple to setup and easy to update. The following commands got me setup with a git repo and the git submodule.\ngit init git submodule add -b main https://github.com/nunocoracao/blowfish.git site/themes/blowfish I then headed to the theme\u0026rsquo;s documentation to set things up as I wanted. Blowfish is very configurable and I didn\u0026rsquo;t know exactly what I wanted to change, so I decided to take inspiration from the lowkey setup. I very much like its simplicity.\nGithub pages\u003e Github pages # All that is left is to host this site. I chose Github pages as its free and my code is versioned there anyways. I first started by creating a public repo that has the same name as my Github user. I then wanted to use Github actions to generate my static site when ever I pushed a new version on the master branch. Hugo setup is what I used. I basically sets up a workflow which builds Hugo and deploys the generated static site to the gh-pages branch. Nice! All that was left to do was setting up my domain name and the repo\u0026rsquo;s page settings.\nFinal thoughts\u003e Final thoughts # Overall, the process took a couple of hours. Which in my books, is a short amount of time for any IT related endeavour. I\u0026rsquo;m stoked !\n","date":"21 January 2023","permalink":"/posts/20230120-first-post/","section":"Posts","summary":"This is my first post using Hugo and the Blowfish theme.","title":"My first post !"},{"content":"","date":"21 January 2023","permalink":"/categories/post/","section":"Categories","summary":"","title":"post"},{"content":"","date":"21 January 2023","permalink":"/posts/","section":"Posts","summary":"","title":"Posts"},{"content":"I always try to find time to work and learn something new. Here are a few projects that I try to work on. The following list contains projects that I\u0026rsquo;ve worked on and that are no longer maintained as well as ongoing projects.\nNote: this whole page is work in progress! Logo Title Description Link DIY Powerwall De-Google: self-host services C++ stateful serverless framework DIY home automation ","date":"21 January 2023","permalink":"/projects/","section":"","summary":"I always try to find time to work and learn something new. Here are a few projects that I try to work on. The following list contains projects that I\u0026rsquo;ve worked on and that are no longer maintained as well as ongoing projects.","title":"Projects"},{"content":"","date":"21 January 2023","permalink":"/tags/","section":"Tags","summary":"","title":"Tags"},{"content":"","date":"21 January 2023","permalink":"/tags/tree/","section":"Tags","summary":"","title":"tree"},{"content":"I\u0026rsquo;m a PhD student in distributed systems at Sorbonne University in Paris. Prior to being a student I worked as an engineer in high-performance computing, in the fintech industry and as a research engineer at Inria (public research institute).\nI\u0026rsquo;m currently interested in bringing shared memory to the actor model (I know, I know\u0026hellip;). This includes topics related to transactions, causal consistency and CRDTs.\nBesides from being a student, I\u0026rsquo;m also a dad ! I try my best to share my passions and hobbies with my daughter. This includes traveling, reading, playing music and chess among other things.\n","date":"13 June 2022","permalink":"/about/","section":"","summary":"I\u0026rsquo;m a PhD student in distributed systems at Sorbonne University in Paris. Prior to being a student I worked as an engineer in high-performance computing, in the fintech industry and as a research engineer at Inria (public research institute).","title":"About"},{"content":"","date":"1 January 0001","permalink":"/series/","section":"Series","summary":"","title":"Series"}]